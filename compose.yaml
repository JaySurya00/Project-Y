services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - users-service
      - tweets-service
      - followers-service
      - feeds-service
      - web

  web:
    build:
      context: ./client
    restart: always
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    develop:
      watch:
        - path: ./client/src
          target: /app/src
          action: rebuild
        - path: ./client/package.json
          action: rebuild

  usersDB:
    image: mysql:latest
    restart: always
    container_name: usersDB
    environment:
      MYSQL_ROOT_PASSWORD: muskansinghvi
      MYSQL_DATABASE: users_db
      MYSQL_USER: user
      MYSQL_PASSWORD: muskansinghvi
    ports:
      - "3306:3306"
    volumes:
      - users_data:/var/lib/mysql

  users-service:
    build:
      context: ./users
    restart: always
    container_name: users-service
    env_file:
      - ./.env
    environment:
      - JWT_KEY=${JWT_KEY}
      - DB_HOST=usersDB
      - DB_PORT=3306
      - DB_USER=user
      - DB_PASSWORD=muskansinghvi
      - DB_NAME=users_db
      - RABBITMQ_URI=${RABBITMQ_URI}
    depends_on:
      - usersDB
      - rabbitmq
    ports:
      - "3001:3001"
    develop:
      watch:
        - path: ./users
          action: rebuild

  feeds-stream-processor:
    build:
      context: ./feeds-stream-processor
    restart: always
    container_name: feeds-stream-processor
    env_file:
      - ./.env
    environment:
      - JWT_KEY=${JWT_KEY}
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - AURA_INSTANCEID=${AURA_INSTANCEID}
      - AURA_INSTANCENAME=${AURA_INSTANCENAME}
      - REDIS_URI=${REDIS_URI}
      - RABBITMQ_URI=${RABBITMQ_URI}
    depends_on:
      - rabbitmq
    ports:
      - "3002:3002"
    develop:
      watch:
        - path: ./feeds-stream-processor
          action: rebuild

  tweets-service:
    build:
      context: ./tweets
    restart: always
    ports:
      - "3003:3003"
    env_file:
      - ./.env
    environment:
      - JWT_KEY_FILE=${JWT_KEY}
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MONGO_URI=${MONGO_URI}
    depends_on:
      - rabbitmq
    develop:
      watch:
        - path: ./tweets
          action: rebuild

  feeds-service:
    build:
      context: ./feeds
    restart: always
    ports:
      - "3004:3004"
    env_file:
      - ./.env
    environment:
      - JWT_KEY=${JWT_KEY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - PYTHONUNBUFFERED=1
    depends_on:
      - rabbitmq
    develop:
      watch:
        - path: ./feeds
          action: rebuild

  followers-service:
    build:
      context: ./followers
    restart: always
    ports:
      - "3005:3005"
    env_file:
      - ./.env
    environment:
      - JWT_KEY=${JWT_KEY}
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - AURA_INSTANCEID=${AURA_INSTANCEID}
      - AURA_INSTANCENAME=${AURA_INSTANCENAME}
      - PYTHONUNBUFFERED=1
    depends_on:
      - rabbitmq
    develop:
      watch:
        - path: ./followers
          action: rebuild

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    hostname: myrabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: jaysurya00
      RABBITMQ_DEFAULT_PASS: muskansinghvi
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  users_data:
  rabbitmq_data:
  redis_data:
